+) ^(So khớp phần đầu của chuỗi hay dòng) và $(So khớp phần cuối của chuỗi hay dòng) đại diện cho đầu và cuối chuỗi tương ứng. Điều này có nghĩa là biểu thức chính quy phải khớp với toàn bộ chuỗi, không được phép có ký tự thừa ở đầu hoặc cuối chuỗi.
+) . So khớp với bất kỳ ký tự đơn nào
+) (…) So khớp với các ‘nhóm’ ký tự bên trong
+) […] So khớp với bất kỳ ký tự đơn nào trong
+) [^…] So khớp với bất kỳ ký tự đơn nào ngoại trừ các ký tự trong dấu ngoặc vuông
+) [m-n] So khớp từ ký tự m đến ký tự n theo thứ tự trong ASCII
+) XY So khớp với ‘X theo sau là Y’, ví dụ: [a-e][i-u]
+) X|Y So khớp với X hoặc Y
+) \d So khớp với ký tự là chữ số, viết tắt của [0-9]
+) \D So khớp với ký tự không phải là chữ số, viết tắt của [^0-9]
+) \s So khớp với bất kỳ ký tự trống nào (dấu cách, tab, xuống dòng), viết tắt của [\t\n\x0B\f\r]
+) \S So khớp với bất kỳ ký tự không phải ký tự trống, viết tắt của [^\s]
+) \w So khớp bất kỳ ký tự chữ nào (chữ cái và chữ số), viết tắt của [a-zA-Z0-9]
+) \W So khớp bất kỳ ký tự nào không phải chữ cái và chữ số, viết tắt của [^\w]
+) X{n} So khớp chính xác n lần sự xuất hiện của X
+) X{n,} So khớp n hoặc nhiều hơn số lần xuất hiện của X
+) X{n,m} So khớp với ít nhất n và nhiều nhất m lần xuất hiện của X

+) ^regex Biểu thức chính quy phải  khớp tại điểm bắt đầu
+) regex$ Biểu thức chính quy phải khớp ở cuối dòng.
+) so khớp bằng .matches(regex)


1. Kiểm tra định dạng email:  ^[\\w-_\\.+]*[\\w-_\\.]\\@([\\w]+\\.)+[\\w]+[\\w]$
2. Kiểm tra username: [a-z0-9_-]{6,12}$
3. Kiểm tra password: ((?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[@#$%!]).{6,20})
4. Kiểm tra khoảng trống đầu và cuối:   ^[ \s]+|[ \s]+$
5. Đỉa chỉ IPv4:    ^(([01]?\\d\\d?|2[0-4]\\d|25[0-5])\\.){3}([01]?\\d\\d?|2[0-4]\\d|25[0-5])$
6. Định dạng ngày dd/mm/yyyy hoặc dd-mm-yyyy:  \\d{2}[-|/]\\d{2}[-|/]\\d{4}